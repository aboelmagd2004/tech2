@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Identity.SignInManager<TechXpress.Data.Models.ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Access Denied";
    // Layout = "_AuthLayout";
}

<div class="access-denied-container">
    <div class="access-denied-card">
        <div class="access-denied-icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>
            </svg>
        </div>

        <h1 class="access-denied-title">Access Denied</h1>

        <div class="access-denied-content">
            <p>You don't have permission to access this resource.</p>

            <div class="access-denied-details">
                <div class="detail-item">
                    <i class="fas fa-lock"></i>
                    <span>Required role: Administrator</span>
                </div>
                <div class="detail-item">
                    <i class="fas fa-user-shield"></i>
                    <span>Your role: @(User.FindFirst(ClaimTypes.Role)?.Value ?? "Guest")</span>
                </div>
                <div class="detail-item">
                    <i class="fas fa-clock"></i>
                    <span>Attempted at: @DateTime.Now.ToString("f")</span>
                </div>
            </div>

            <div class="access-denied-actions">
                <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-home"></i> Return Home
                </a>

                @if (SignInManager.IsSignedIn(User))
                {
                    <a asp-controller="Account" asp-action="Logout" class="btn btn-secondary">
                        <i class="fas fa-sign-out-alt"></i> Sign Out
                    </a>
                }
                else
                {
                    <a asp-controller="Account" asp-action="Login" class="btn btn-secondary">
                        <i class="fas fa-sign-in-alt"></i> Sign In
                    </a>
                }

                <button class="btn btn-tertiary" id="requestAccessBtn">
                    <i class="fas fa-envelope"></i> Request Access
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="requestAccessModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Request Access</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="accessRequestForm">
                    <div class="form-group">
                        <label for="requestMessage">Additional Information</label>
                        <textarea class="form-control" id="requestMessage" rows="4"
                                  placeholder="Please explain why you need access to this resource"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="submitRequestBtn">Submit Request</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .access-denied-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 2rem;
            background-color: var(--light);
        }

        .access-denied-card {
            background: var(--white);
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            width: 100%;
            max-width: 600px;
            padding: 3rem;
            text-align: center;
            animation: fadeInUp 0.6s ease;
        }

        .access-denied-icon {
            width: 100px;
            height: 100px;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--danger);
        }

        .access-denied-icon svg {
            width: 100%;
            height: 100%;
            stroke: currentColor;
            stroke-width: 1.5;
        }

        .access-denied-title {
            color: var(--danger);
            font-size: 2rem;
            margin-bottom: 1.5rem;
            font-weight: 700;
        }

        .access-denied-content p {
            color: var(--dark);
            font-size: 1.1rem;
            margin-bottom: 2rem;
        }

        .access-denied-details {
            background: var(--gray-100);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            text-align: left;
        }

        .detail-item {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .detail-item:last-child {
            margin-bottom: 0;
        }

        .detail-item i {
            width: 24px;
            text-align: center;
            margin-right: 1rem;
            color: var(--primary);
        }

        .access-denied-actions {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            gap: 0.5rem;
        }

        .btn-primary {
            background: var(--primary);
            color: black;
            border: none;
        }

        .btn-primary:hover {
            /* background: var(--primary-dark); */
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(78, 115, 223, 0.4);
        }

        .btn-secondary {
            background: var(--gray-200);
            color: var(--dark);
            border: none;
        }

        .btn-secondary:hover {
            /* background: var(--gray-300); */
            transform: translateY(-2px);
        }

        .btn-tertiary {
            background: transparent;
            color: var(--primary);
            border: 1px solid var(--primary);
        }

        .btn-tertiary:hover {
            /* background: var(--primary-light); */
            transform: translateY(-2px);
        }

        /* Modal styles */
        .modal-content {
            border-radius: 12px;
            border: none;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            border-bottom: 1px solid var(--gray-200);
            padding: 1.5rem;
        }

        .modal-title {
            font-weight: 600;
            color: var(--dark);
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            border-top: 1px solid var(--gray-200);
            padding: 1.5rem;
        }

        /* Animations */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@media (max-width: 768px) {
            .access-denied-card {
                padding: 2rem 1.5rem;
            }

            .access-denied-actions {
                flex-direction: column;
                gap: 0.75rem;
            }

            .btn {
                width: 100%;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Request access modal
            $('#requestAccessBtn').click(function() {
                $('#requestAccessModal').modal('show');
            });

            // Submit access request
            $('#submitRequestBtn').click(function() {
                const message = $('#requestMessage').val();

                if (!message) {
                    toastr.error('Please provide a reason for your access request');
                    return;
                }

                // In a real application, this would send to your backend
                console.log('Access request submitted:', message);

                // Simulate API call
                setTimeout(function() {
                    $('#requestAccessModal').modal('hide');
                    toastr.success('Your access request has been submitted');
                    $('#requestMessage').val('');
                }, 1000);
            });

            // Show toastr message if any
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    toastr.error('@TempData["ErrorMessage"]', 'Error', {
                        closeButton: true,
                        progressBar: true,
                        positionClass: "toast-top-center",
                        timeOut: 5000
                    });
            </text>
        }
        });
    </script>
}